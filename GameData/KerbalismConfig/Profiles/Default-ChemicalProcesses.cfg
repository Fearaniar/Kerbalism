// ============================================================================
// ISRU chemical plants
// ============================================================================

@PART[kerbalism-chemicalplant]:NEEDS[ProfileDefault,B9PartSwitch]:AFTER[KerbalismDefault]
{
  MODULE
  {
    name = ModuleKsmProcessController
    id = processChemical1
    capacity = 2
  }

  MODULE
  {
    name = ModuleKsmProcessController
    id = processChemical2
    capacity = 2
  }

  MODULE
  {
    name = ModuleB9PartSwitch
    switcherDescription = Process 1
    moduleID = processChemical1
    affectDragCubes = false
    affectFARVoxels = false
  }

  MODULE
  {
    name = ModuleB9PartSwitch
    switcherDescription = Process 2
    moduleID = processChemical2
    affectDragCubes = false
    affectFARVoxels = false
  }
}

@PART[MiniISRU,ISRU]:NEEDS[ProfileDefault]:AFTER[KerbalismDefault]
{
  !MODULE[ModuleResourceConverter]:HAS[#ConverterName[Lf+Ox]] {}
  !MODULE[ModuleResourceConverter]:HAS[#ConverterName[LiquidFuel]] {}
  !MODULE[ModuleResourceConverter]:HAS[#ConverterName[Oxidizer]] {}
  !MODULE[ModuleResourceConverter]:HAS[#ConverterName[Monoprop]] {}
  !MODULE[ModuleResourceConverter]:HAS[#ConverterName[MonoPropellant]] {}
  !MODULE[ModuleOverheatDisplay] {}
  !MODULE[ModuleCoreHeat] {}

  MODULE
  {
    name = ModuleKsmProcessController
    id = processChemical1
    capacity = 36
  }

  MODULE
  {
    name = ModuleKsmProcessController
    id = processChemical2
    capacity = 36
  }

  MODULE
  {
    name = ModuleB9PartSwitch
    switcherDescription = Process 1
    moduleID = processChemical1
    affectDragCubes = false
    affectFARVoxels = false
  }

  MODULE
  {
    name = ModuleB9PartSwitch
    switcherDescription = Process 2
    moduleID = processChemical2
    affectDragCubes = false
    affectFARVoxels = false
  }
}

@PART[ISRU]:NEEDS[ProfileDefault]:FOR[KerbalismDefault]
{
  @MODULE[ModuleKsmProcessController],*
  {
    @capacity = 90.0
  }
}

@PART[*]:NEEDS[ProfileDefault,B9PartSwitch]:AFTER[KerbalismDefault]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[processChemical*]],*
	{
		SUBTYPE
		{
			name = _Scrubber
			title = #KERBALISM_Scrubber_title
			descriptionSummary = #KERBALISM_Scrubber_desc
		}

    SUBTYPE
    {
      name = _WaterElectrolysis
      title = #KERBALISM_WaterElectrolysis_title // Water electrolysis
      descriptionSummary = #KERBALISM_WaterElectrolysis_desc // Split <b>Water</b> into its <b>Hydrogen</b> and <b>Oxygen</b> components.
    }

    SUBTYPE
    {
      name = _Sabatier
      title = #KERBALISM_SabatierProcess_title // Sabatier process
      descriptionSummary = #KERBALISM_SabatierProcess_desc // <b>Hydrogen</b> and <b>CarbonDioxide</b> react with a nickel catalyst to produce <b>Water</b> and <b>LiquidFuel</b>.
    }

    SUBTYPE
    {
      name = _Haber
      title = #KERBALISM_HaberProcess_title // Haber process
      descriptionSummary = #KERBALISM_HaberProcess_desc // Produce <b>Ammonia</b> by <b>Nitrogen</b> fixation.
    }

    SUBTYPE
    {
      name = _WasteIncinerator
      title = #KERBALISM_WasteIncinerator_title
      descriptionSummary = #KERBALISM_WasteIncinerator_desc // Produce <b>CarbonDioxide</b> and <b>Water</b> by combustion of <b>Waste</b> with <b>Oxygen</b>. Includes a small exhaust turbine generator. If needed <b>Water</b> will be vented to continue <b>CarbonDioxide</b> extraction.
      // tech = precisionEngineering
    }

    SUBTYPE
    {
      name = _WasteCompressor
      title = #KERBALISM_WasteCompressor_title // Waste compressor
      descriptionSummary = #KERBALISM_WasteCompressor_desc // Compact <b>Waste</b> to the density of <b>shielding material</b>.
      // tech = precisionEngineering
    }

    SUBTYPE
    {
      name = _Anthraquinone
      title = #KERBALISM_AnthraquinoneProcess_title // Anthraquinone process
      descriptionSummary = #KERBALISM_AnthraquinoneProcess_desc // Synthesize <b>Oxidizer</b> using a redox of <b>Oxygen</b> and <b>Hydrogen</b>.
      // tech = advScienceTech
    }

    SUBTYPE
    {
      name = _HydrazineProduction
      title = #KERBALISM_HydrazineProduction_title // Hydrazine production
      descriptionSummary = #KERBALISM_HydrazineProduction_desc // <b>Oxidizer</b> and <b>Ammonia</b> react to produce <b>MonoPropellant</b>, <b>Oxygen</b> and <b>Water</b>.
      // tech = advScienceTech
    }

    SUBTYPE
    {
      name = _MRE
      title = #KERBALISM_MoltenRegolithElectrolysis_title // MRE
      descriptionSummary = #KERBALISM_MoltenRegolithElectrolysis_desc // Extract <b>Oxygen</b>, <b>CarbonDioxide</b> and <b>Shielding</b> out of <b>Ore</b>. If needed <b>CarbonDioxide</b> and/or <b>Shielding</b> will be vented in order to continue the <b>Oxygen</b> extraction.
      // tech = advScienceTech
    }

    SUBTYPE
    {
      name = _NitroHydrazine
      title = #KERBALISM_HydrazineProductionN2_title // Hydrazine production N2
      descriptionSummary = #KERBALISM_HydrazineProductionN2_desc // <b>Oxidizer</b> and <b>Ammonia</b> with <b>Nitrogen</b> injection react to produce <b>MonoPropellant</b> and <b>Oxygen</b>.
      // tech = experimentalScience
    }

    SUBTYPE
    {
      name = _SOE
      title = #KERBALISM_SolidOxideElectrolysis_title // SOE
      descriptionSummary = #KERBALISM_SolidOxideElectrolysis_desc // Transform <b>CarbonDioxide</b> into <b>Oxygen</b> and <b>Shielding</b>.
      // tech = experimentalScience
    }

    SUBTYPE
    {
      name = _SCO
      title = #KERBALISM_SelectiveCatalyticOxidation_title // SCO
      descriptionSummary = #KERBALISM_SelectiveCatalyticOxidation_desc // <b>Ammonia</b> and <b>Oxygen</b> react with a hydrotalcite-like catalyst to produce <b>Nitrogen</b> and <b>Water</b>.
      // tech = experimentalScience
    }
	}
}

// ============================================================================
// Fuel cells
// ============================================================================

@PART[FuelCell,FuelCellArray]:NEEDS[ProfileDefault]:AFTER[KerbalismDefault]
{
  !MODULE[ModuleResourceConverter] {}
  !RESOURCE[ElectricCharge] {}

  MODULE
  {
    name = ModuleKsmProcessController
    id = processFuelCell1
    capacity = 1
  }

  MODULE
  {
    name = ModuleB9PartSwitch
    switcherDescription = Fuel Cell
    moduleID = processFuelCell1
    affectDragCubes = false
    affectFARVoxels = false
  }
}

@PART[FuelCellArray]:NEEDS[ProfileDefault]:FOR[KerbalismDefault]
{
  @MODULE[ModuleKsmProcessController],*
  {
    @capacity = 6
  }
}

@PART[*]:NEEDS[ProfileDefault,B9PartSwitch]:AFTER[KerbalismDefault]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[processFuelCell*]],*
	{
		SUBTYPE
		{
			name = _FuelCell
			title = #KERBALISM_H2O2FuelCell_title // H2+O2 fuel cell
      descriptionSummary = #KERBALISM_H2O2FuelCell_desc // Burns <b>Hydrogen</b> gas and <b>Oxygen</b> gas, producing <b>Water</b> as a by-product.
      // tech = basicScience
		}

    SUBTYPE
    {
      name = _MonopropFuelCell
      title = #KERBALISM_MonopropO2FuelCell_title // Monoprop+O2 fuel cell
      descriptionSummary = #KERBALISM_MonopropO2FuelCell_desc2 // Burns <b>MonoPropellant</b> and <b>Oxygen</b> gas, producing <b>Water</b> and <b>Nitrogen</b> gas as by-products.
    }
  }
}

// ============================================================================
// Add MODULE node to B9PS subtypes for ModuleKsmProcessController
// ============================================================================

@PART[*]:NEEDS[ProfileDefault,B9PartSwitch]:AFTER[KerbalismDefault]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[process*]],*
	{
		@SUBTYPE,*
    {
      MODULE
      {
        IDENTIFIER {
          name = ModuleKsmProcessController
          id = #$../../../moduleID$
        }
        DATA {
          resource = #$../../name$
          title = #$../../title$
        }
      }
    }
  }
}



// ============================================================================
// RTG
// ============================================================================

@PART[rtg]:NEEDS[ProfileDefault]:AFTER[KerbalismDefault]
{
  !MODULE[ModuleGenerator] {}
  !MODULE[ModuleCoreHeat] {}

  MODULE
  {
    name = ModuleKsmProcessController
    resource = _RTG
    id = rtg
    title = #KERBALISM_RTG_title // RTG
    capacity = 0.75
    running = true
    toggle = false
  }
}
